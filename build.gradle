plugins {
	id "java"
	id "maven"
	id "org.springframework.boot" version "2.3.1.RELEASE"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "io.freefair.lombok" version "5.1.0"
}

group = "com.chessterm"
version = "1.2.0"

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url "https://maven.aliyun.com/repository/public/" }
    maven { url "https://maven.aliyun.com/repository/spring/" }
    mavenLocal()
    mavenCentral()
	maven {
		url "https://maven.pkg.github.com/ChessTerm/flamechess-java"
		credentials {
			username System.getenv("GITHUB_USER")
			// Due to GitHub restrictions, you must set the GITHUB_TOKEN variable.
			password System.getenv("GITHUB_TOKEN")
		}
	}
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-data-rest"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-websocket"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.security:spring-security-test"
	implementation "com.chessterm:flamechess:0.3.3-SNAPSHOT"
	developmentOnly "org.springframework.boot:spring-boot-devtools"
	runtimeOnly "mysql:mysql-connector-java"
	implementation "commons-codec:commons-codec:1.14"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
}

test {
	useJUnitPlatform()
}

jar {
	enabled = true

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

bootJar {
	classifier 'boot'
}
